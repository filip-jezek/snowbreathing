within SnowBreathing.Models;

model SnowBreathing_Models_SnowBreathingCO2O2_FLAT
  constant Real pi = 3.141592653589793;
  parameter Real V_cavity = 0.001;
  Real lungs_fluxConcA_q(unit = "m3/s") "Volume flow rate from the connection point into the component";
  Real lungs_fluxConcA_CO2(unit = "1") "CO2 volume concentration";
  Real lungs_fluxConcA_O2(unit = "1") "O2 volume concentration";
  Boolean lungs_exhale;
  Real lungs_q(unit = "m3/s") "flux into lungs";
  constant Real lungs_pi = 3.141592653589793;
  parameter Real lungs_T_L(unit = "s") = 4.0 "breathing period [s]";
  parameter Real lungs_V_max_L(unit = "m3") = 0.0048 "maximal useful lungs volume [m3]";
  parameter Real lungs_V_0_L(unit = "m3") = 0.001 "residual capacity [m3]";
  parameter Real lungs_q_abs_L(unit = "m3/s") = 2.0 * lungs_V_max_L / lungs_T_L "absolute value of air flux [m3/s]";
  parameter Real lungs_VCO2_prod(unit = "m3/s") = 4e-006 "volume of CO2 produced per second [m3/s]";
  Real lungs_V(unit = "m3", start = lungs_V_max_L + lungs_V_0_L, fixed = true) "current lungs volume [m3]";
  Real lungs_VCO2(unit = "m3", start = 0.5 * lungs_VCO2_prod * lungs_T_L, fixed = true) "volume of C02 in lungs [m3]";
  Real lungs_CO2(unit = "m3/m3") "CO2 concentration in lungs";
  Real lungs_VO2(unit = "m3", start = 0.2 * (lungs_V_max_L + lungs_V_0_L)  -0.5 * lungs_VCO2_prod * lungs_T_L, fixed = true) "volume of C02 in lungs [m3]";
  Real lungs_O2(unit = "m3/m3") "O2 concentration in lungs";
  parameter Real cavity_V(unit = "m3") = V_cavity;
  Real cavity_VCO2(unit = "m3");
  Real cavity_CO2(unit = "m3/m3", start = 0.0);
  Real cavity_fluxConcA_q(unit = "m3/s") "Volume flow rate from the connection point into the component";
  Real cavity_fluxConcA_CO2(unit = "1") "CO2 volume concentration";
  Real cavity_fluxConcA_O2(unit = "1") "O2 volume concentration";
  Real cavity_fluxConcB_q(unit = "m3/s") "Volume flow rate from the connection point into the component";
  Real cavity_fluxConcB_CO2(unit = "1") "CO2 volume concentration";
  Real cavity_fluxConcB_O2(unit = "1") "O2 volume concentration";
  Real cavity_VO2(unit = "m3");
  Real cavity_O2(unit = "m3/m3", start = 0.2);
  constant Real difussionSphere_pi = 3.141592653589793;
  parameter Real difussionSphere_omega_x0(unit = "m") = difussionSphere_R_in "x value at left boundary";
  parameter Real difussionSphere_omega_L(unit = "m") = difussionSphere_R_out "length of the domain";
  constant Integer difussionSphere_omega_N = 4 "number of grid nodes";
  parameter Real difussionSphere_omega_dx = 0.3333333333333333 * difussionSphere_omega_L "grid space step";
  parameter Real difussionSphere_omega_x_1(unit = "m") = difussionSphere_omega_x0 "space coordinate";
  parameter Real difussionSphere_omega_x_2(unit = "m") = difussionSphere_omega_x0 + difussionSphere_omega_dx "space coordinate";
  parameter Real difussionSphere_omega_x_3(unit = "m") = difussionSphere_omega_x0 + 2.0 * difussionSphere_omega_dx "space coordinate";
  parameter Real difussionSphere_omega_x_4(unit = "m") = difussionSphere_omega_x0 + 3.0 * difussionSphere_omega_dx "space coordinate";
  Real difussionSphere_q "volume flow rate";
  Boolean difussionSphere_exhale;
  Real difussionSphere_CO2_1(unit = "m3/m3") "CO2 concentration";
  Real difussionSphere_CO2_2(unit = "m3/m3") "CO2 concentration";
  Real difussionSphere_CO2_3(unit = "m3/m3") "CO2 concentration";
  Real difussionSphere_CO2_4(unit = "m3/m3") "CO2 concentration";
  Real difussionSphere_va_S_1(unit = "m/s") "velocity of advection";
  Real difussionSphere_va_S_2(unit = "m/s") "velocity of advection";
  Real difussionSphere_va_S_3(unit = "m/s") "velocity of advection";
  Real difussionSphere_va_S_4(unit = "m/s") "velocity of advection";
  parameter Real difussionSphere_D = 3e-005 "coefficient of diffusion in snow [m2/s]";
  parameter Real difussionSphere_CO2_out = 0.0 "CO2 concentration out of the sphere";
  parameter Real difussionSphere_CO2_init = 0.0 "initial CO2 concentartion";
  parameter Real difussionSphere_R_out = 0.5;
  parameter Real difussionSphere_R_in = (0.238732414637843 * V_cavity) ^ 0.3333333333333333;
  Real difussionSphere_fluxConcB_q(unit = "m3/s") "Volume flow rate from the connection point into the component";
  Real difussionSphere_fluxConcB_CO2(unit = "1") "CO2 volume concentration";
  Real difussionSphere_fluxConcB_O2(unit = "1") "O2 volume concentration";
  Real difussionSphere_O2_1(unit = "m3/m3") "O2 concentration";
  Real difussionSphere_O2_2(unit = "m3/m3") "O2 concentration";
  Real difussionSphere_O2_3(unit = "m3/m3") "O2 concentration";
  Real difussionSphere_O2_4(unit = "m3/m3") "O2 concentration";
  parameter Real difussionSphere_O2_out(unit = "m3/m3") = 0.2 "O2 concentration out of the sphere";
  parameter Real difussionSphere_O2_init(unit = "m3/m3") = 0.2 "initial O2 concentartion";
  Real difussionSphere_O2_ghostL(unit = "m3/m3") "O2 concentration";
  Real difussionSphere_O2_ghostR(unit = "m3/m3") "O2 concentration";
  Real difussionSphere_CO2_ghostL(unit = "m3/m3") "CO2 concentration";
  Real difussionSphere_CO2_ghostR(unit = "m3/m3") "CO2 concentration";
  Real temperatureStep_fluxConcA_q(unit = "m3/s") "Volume flow rate from the connection point into the component";
  Real temperatureStep_fluxConcA_CO2(unit = "1") "CO2 volume concentration";
  Real temperatureStep_fluxConcA_O2(unit = "1") "O2 volume concentration";
  Real temperatureStep_fluxConcB_q(unit = "m3/s") "Volume flow rate from the connection point into the component";
  Real temperatureStep_fluxConcB_CO2(unit = "1") "CO2 volume concentration";
  Real temperatureStep_fluxConcB_O2(unit = "1") "O2 volume concentration";
  parameter Real temperatureStep_TA(unit = "K") = 310.15 "temperature A, °K";
  parameter Real temperatureStep_TB(unit = "K") = 273.15 "temperature B, °K";
initial equation
  difussionSphere_O2_1 = difussionSphere_O2_init "O2 initial concentartion";
  difussionSphere_O2_2 = difussionSphere_O2_init "O2 initial concentartion";
  difussionSphere_O2_3 = difussionSphere_O2_init "O2 initial concentartion";
  difussionSphere_O2_4 = difussionSphere_O2_init "O2 initial concentartion";
  difussionSphere_CO2_1 = difussionSphere_CO2_init "CO2 concentration initially 0";
  difussionSphere_CO2_2 = difussionSphere_CO2_init "CO2 concentration initially 0";
  difussionSphere_CO2_3 = difussionSphere_CO2_init "CO2 concentration initially 0";
  difussionSphere_CO2_4 = difussionSphere_CO2_init "CO2 concentration initially 0";
equation
  der(lungs_VO2) = lungs_q * smooth(0, if lungs_fluxConcA_q > 0.0 then temperatureStep_fluxConcA_O2 else lungs_fluxConcA_O2) - lungs_VCO2_prod "CO2 volume given by breathing and metabolic consumption";
  lungs_O2 = lungs_VO2 / lungs_V;
  lungs_fluxConcA_O2 = lungs_O2;
  lungs_exhale = sin(6.283185307179586 * time / lungs_T_L) > 0.0;
  lungs_q = if lungs_exhale then -lungs_q_abs_L else lungs_q_abs_L;
  der(lungs_V) = lungs_q;
  der(lungs_VCO2) = lungs_q * smooth(0, if lungs_fluxConcA_q > 0.0 then temperatureStep_fluxConcA_CO2 else lungs_fluxConcA_CO2) + lungs_VCO2_prod "CO2 volume given by breathing and metabolic production";
  lungs_CO2 = lungs_VCO2 / lungs_V;
  lungs_fluxConcA_q = lungs_q;
  lungs_fluxConcA_CO2 = lungs_CO2;
  der(cavity_VO2) = cavity_fluxConcA_q * (smooth(0, if cavity_fluxConcA_q > 0.0 then temperatureStep_fluxConcB_O2 else cavity_fluxConcA_O2) - smooth(0, if cavity_fluxConcB_q > 0.0 then difussionSphere_fluxConcB_O2 else cavity_fluxConcB_O2));
  cavity_O2 = cavity_VO2 / cavity_V;
  cavity_fluxConcA_O2 = cavity_O2;
  cavity_fluxConcB_O2 = cavity_O2;
  cavity_fluxConcA_q + cavity_fluxConcB_q = 0.0;
  der(cavity_VCO2) = cavity_fluxConcA_q * (smooth(0, if cavity_fluxConcA_q > 0.0 then temperatureStep_fluxConcB_CO2 else cavity_fluxConcA_CO2) - smooth(0, if cavity_fluxConcB_q > 0.0 then difussionSphere_fluxConcB_CO2 else cavity_fluxConcB_CO2));
  cavity_CO2 = cavity_VCO2 / cavity_V;
  cavity_fluxConcA_CO2 = cavity_CO2;
  cavity_fluxConcB_CO2 = cavity_CO2;
  der(difussionSphere_CO2_1) + 0.5 * (0.07957747154594767 * difussionSphere_q / difussionSphere_omega_x_1 ^ 2.0  -2.0 * difussionSphere_D / difussionSphere_omega_x_1) * (difussionSphere_CO2_2 - difussionSphere_CO2_ghostL) / difussionSphere_omega_dx - difussionSphere_D * (difussionSphere_CO2_ghostL  -2.0 * difussionSphere_CO2_1 + difussionSphere_CO2_2) / difussionSphere_omega_dx ^ 2.0 = 0.0 "the advection-diffusion equation";
  der(difussionSphere_CO2_2) + 0.5 * (0.07957747154594767 * difussionSphere_q / difussionSphere_omega_x_2 ^ 2.0  -2.0 * difussionSphere_D / difussionSphere_omega_x_2) * (difussionSphere_CO2_3 - difussionSphere_CO2_1) / difussionSphere_omega_dx - difussionSphere_D * (difussionSphere_CO2_1  -2.0 * difussionSphere_CO2_2 + difussionSphere_CO2_3) / difussionSphere_omega_dx ^ 2.0 = 0.0 "the advection-diffusion equation";
  der(difussionSphere_CO2_3) + 0.5 * (0.07957747154594767 * difussionSphere_q / difussionSphere_omega_x_3 ^ 2.0  -2.0 * difussionSphere_D / difussionSphere_omega_x_3) * (difussionSphere_CO2_4 - difussionSphere_CO2_2) / difussionSphere_omega_dx - difussionSphere_D * (difussionSphere_CO2_2  -2.0 * difussionSphere_CO2_3 + difussionSphere_CO2_4) / difussionSphere_omega_dx ^ 2.0 = 0.0 "the advection-diffusion equation";
  der(difussionSphere_CO2_4) + 0.5 * (0.07957747154594767 * difussionSphere_q / difussionSphere_omega_x_4 ^ 2.0  -2.0 * difussionSphere_D / difussionSphere_omega_x_4) * (difussionSphere_CO2_ghostR - difussionSphere_CO2_3) / difussionSphere_omega_dx - difussionSphere_D * (difussionSphere_CO2_3  -2.0 * difussionSphere_CO2_4 + difussionSphere_CO2_ghostR) / difussionSphere_omega_dx ^ 2.0 = 0.0 "the advection-diffusion equation";
  difussionSphere_O2_ghostL = if difussionSphere_exhale then cavity_fluxConcB_O2 else 2.0 * difussionSphere_O2_1 - difussionSphere_O2_2 "left BC duringexhalation, extrapolation during inhalation";
  difussionSphere_fluxConcB_O2 = difussionSphere_O2_ghostL;
  der(difussionSphere_O2_1) + 0.5 * (0.07957747154594767 * difussionSphere_q / difussionSphere_omega_x_1 ^ 2.0  -2.0 * difussionSphere_D / difussionSphere_omega_x_1) * (difussionSphere_O2_2 - difussionSphere_O2_ghostL) / difussionSphere_omega_dx - difussionSphere_D * (difussionSphere_O2_ghostL  -2.0 * difussionSphere_O2_1 + difussionSphere_O2_2) / difussionSphere_omega_dx ^ 2.0 = 0.0 "the advection-diffusion equation";
  der(difussionSphere_O2_2) + 0.5 * (0.07957747154594767 * difussionSphere_q / difussionSphere_omega_x_2 ^ 2.0  -2.0 * difussionSphere_D / difussionSphere_omega_x_2) * (difussionSphere_O2_3 - difussionSphere_O2_1) / difussionSphere_omega_dx - difussionSphere_D * (difussionSphere_O2_1  -2.0 * difussionSphere_O2_2 + difussionSphere_O2_3) / difussionSphere_omega_dx ^ 2.0 = 0.0 "the advection-diffusion equation";
  der(difussionSphere_O2_3) + 0.5 * (0.07957747154594767 * difussionSphere_q / difussionSphere_omega_x_3 ^ 2.0  -2.0 * difussionSphere_D / difussionSphere_omega_x_3) * (difussionSphere_O2_4 - difussionSphere_O2_2) / difussionSphere_omega_dx - difussionSphere_D * (difussionSphere_O2_2  -2.0 * difussionSphere_O2_3 + difussionSphere_O2_4) / difussionSphere_omega_dx ^ 2.0 = 0.0 "the advection-diffusion equation";
  der(difussionSphere_O2_4) + 0.5 * (0.07957747154594767 * difussionSphere_q / difussionSphere_omega_x_4 ^ 2.0  -2.0 * difussionSphere_D / difussionSphere_omega_x_4) * (difussionSphere_O2_ghostR - difussionSphere_O2_3) / difussionSphere_omega_dx - difussionSphere_D * (difussionSphere_O2_3  -2.0 * difussionSphere_O2_4 + difussionSphere_O2_ghostR) / difussionSphere_omega_dx ^ 2.0 = 0.0 "the advection-diffusion equation";
  difussionSphere_O2_ghostR = if difussionSphere_exhale then 2.0 * difussionSphere_O2_4 - difussionSphere_O2_3 else difussionSphere_O2_out "right/outer BC or extrapolation";
  difussionSphere_q = difussionSphere_fluxConcB_q;
  difussionSphere_exhale = difussionSphere_q > 0.0;
  difussionSphere_CO2_ghostL = if difussionSphere_exhale then cavity_fluxConcB_CO2 else 2.0 * difussionSphere_CO2_1 - difussionSphere_CO2_2 "left BC duringexhalation, extrapolation during inhalation";
  difussionSphere_fluxConcB_CO2 = difussionSphere_CO2_ghostL;
  difussionSphere_va_S_1 = 0.07957747154594767 * difussionSphere_q / difussionSphere_omega_x_1 ^ 2.0 "velocity of advection";
  difussionSphere_va_S_2 = 0.07957747154594767 * difussionSphere_q / difussionSphere_omega_x_2 ^ 2.0 "velocity of advection";
  difussionSphere_va_S_3 = 0.07957747154594767 * difussionSphere_q / difussionSphere_omega_x_3 ^ 2.0 "velocity of advection";
  difussionSphere_va_S_4 = 0.07957747154594767 * difussionSphere_q / difussionSphere_omega_x_4 ^ 2.0 "velocity of advection";
  difussionSphere_CO2_ghostR = if difussionSphere_exhale then 2.0 * difussionSphere_CO2_4 - difussionSphere_CO2_3 else difussionSphere_CO2_out "right/outer BC or extrapolation";
  lungs_fluxConcA_O2 = temperatureStep_fluxConcB_O2;
  temperatureStep_fluxConcA_O2 = cavity_fluxConcA_O2;
  lungs_fluxConcA_CO2 = temperatureStep_fluxConcB_CO2;
  temperatureStep_fluxConcA_CO2 = cavity_fluxConcA_CO2;
  temperatureStep_fluxConcA_q / temperatureStep_TA + temperatureStep_fluxConcB_q / temperatureStep_TB = 0.0;
  lungs_fluxConcA_q + temperatureStep_fluxConcA_q = 0.0;
  temperatureStep_fluxConcB_q + cavity_fluxConcA_q = 0.0;
  cavity_fluxConcB_q + difussionSphere_fluxConcB_q = 0.0;
end SnowBreathing_Models_SnowBreathingCO2O2_FLAT;
